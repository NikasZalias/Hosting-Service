require './lib/admin'
require './lib/domain'
require './lib/hosting'
require './lib/server'
require './lib/user'
require 'yaml'

STDOUT.sync = true
@user = nil

def start
  @hosting = Hosting.new('Nikas', [50000, 'LT32154545787899'])
  # a = Server.new(1, 'Small', 10)
  # b = Server.new(2, 'Medium', 30)
  # c = Server.new(3, 'Large', 60)
  # @hosting.add_server(a)
  # @hosting.add_server(b)
  # @hosting.add_server(c)
  # @hosting.save_to_database()
  @hosting.load_database
  menu
end

def get_selection(text, range_min, range_max)
  text = text || ''
  selection = nil
  while selection.nil? || !selection.between?(range_min, range_max) do
    print text
    selection = get_int
  end
  selection
end

def get_int
  Integer(gets)
rescue ArgumentError
  nil
end

def register
  p 'Name: '
  name = String(gets)
  p 'Surname: '
  surname = String(gets)
  p 'Address: '
  address = String(gets)
  p 'Number: '
  number = Integer(gets)
  p 'Email: '
  email = String(gets)
  p 'Password: '
  password = String(gets)
  p 'Country: '
  country = String(gets)
  p 'That\'s cool! But we need more information about you so please fill some more fields.'
  p 'Person type(Individual or Company):'
  person_type = String(gets)
  p 'Company: '
  company_name = String(gets)
  p 'Account number: '
  account_number = String(gets)
  p 'How much money you want to deposit: '
  current_money_count = Integer(gets)

  @hosting.register(name, surname, address, number,
                    account_number, email, person_type,
                    company_name, country,
                    current_money_count, password)
  @hosting.save_to_database
end

def delete_user
  p 'Enter user\'s ID to delete: '
  del_id = Integer(gets)
  @hosting.del_user(del_id)
  @hosting.save_to_database
end

def add_admin
  p 'Admin\'s ID: '
  id = Integer(gets)
  p 'Admin\'s name: '
  name = String(gets)
  p 'Admin\'s password: '
  password = String(gets)
  admin = Admin.new(id, name, password, 2)
  @hosting.add_admin(admin)
  @hosting.save_to_database
end

def delete_admin
  p 'Enter admin\'s ID to delete: '
  del_id = Integer(gets)
  @hosting.del_admin(del_id)
  @hosting.save_to_database
end

def block_user
  p 'Prove that you are admin (Enter your ID): '
  admin_id = Integer(gets)
  admin = @hosting.find_admin(admin_id)
  @hosting.lists[:admin].each do |i|
    next unless i == admin
    p 'Enter user\'s ID to block: '
    user_id = Integer(gets)
    @hosting.block_user(user_id, i)
    @hosting.lists[:user].each do |i|
      next unless i.id == user_id
      next unless i.blocked
      p 'User blocked!'
      @hosting.save_to_database
    end
  end
end

def unblock_user
  p 'Prove that you are admin (Enter your ID): '
  admin_id = Integer(gets)
  admin = @hosting.find_admin(admin_id)
  @hosting.lists[:admin].each do |i|
    next unless i == admin
    p 'Enter user\'s ID to unblock: '
    user_id = Integer(gets)
    @hosting.unblock_user(user_id)
    @hosting.lists[:user].each do |i|
      next unless i.id == user_id
      if i.blocked
        p 'User unblocked!'
        @hosting.save_to_database
      end
    end
  end
end

def edit_user
  p 'Enter your ID to check if you are user you are pretending to be: '
  user_id = Integer(gets)
  user = @hosting.find_user(user_id)
  @hosting.lists[:user].each do |i|
    next unless i == user
    selection = nil
    while selection != 0
      print("\n------------------")
      text = "\n Main menu\n" /
             "1. Edit address\n" /
             "2. Edit number\n" /
             "3. Edit account number\n" /
             "4. Edit password\n" /
             "0. Exit\n" /
             "\n" /
             "------------------\n\n" /
             'Select an option: '
      selection = get_selection(text, 0, 15)
      case selection
      when 1
        p 'Enter your new address: '
        new_address = String(gets)
        @hosting.edit(i, new_address, i.number, i.account_number, i.password)
        @hosting.save_to_database
      when 2
        p 'Enter your new number: '
        new_number = Integer(gets)
        @hosting.edit(i, i.address, new_number, i.account_number, i.password)
        @hosting.save_to_database
      when 3
        p 'Enter your new account number: '
        new_account_number = String(gets)
        @hosting.edit(i, i.address, i.address, new_account_number, i.password)
        @hosting.save_to_database
      when 4
        p 'Enter your new password: '
        new_password = String(gets)
        @hosting.edit(i, i.address, i.number, i.account_number, new_password)
        @hosting.save_to_database
      when 5
        break
      end
    end
  end
end

def buy_server
  p '---Server list---'
  @hosting.lists[:server].each do |i|
    p i.name
    print(i.price)
    p '  $'
    p '#####'
  end
  p '-----------------'
  p 'Enter your ID to check if you are user you are pretending to be: '
  user_id = Integer(gets)
  user = @hosting.find_user(user_id)
  @hosting.lists[:user].each do |i|
    next unless i == user
    p 'Enter name of selected server plan: '
    server_name = String(gets)
    @hosting.add_server_to_user(i, server_name)
    p 'You successfully bought server!'
    @hosting.save_to_database
  end
end

def buy_domain
  p 'Enter your ID to check if you are user you are pretending to be: '
  user_id = Integer(gets)
  user = @hosting.find_user(user_id)
  @hosting.lists[:user].each do |i|
    next unless i == user
    p 'Enter your domain name (include "www." and ".lt"): '
    domain_name = String(gets)
    @hosting.add_domain(domain_name, i)
    @hosting.save_to_database
  end
end

def menu
  selection = nil
  while selection != 0
    print("\n------------------")
    text = "\n Main menu\n" /
           "1. Register\n" /
           "2. Delete user\n" /
           "3. Add admin\n" /
           "4. Delete admin\n" /
           "5. Block user\n" /
           "6. Unblock user\n" /
           "7. Edit user\n" /
           "8. Buy server\n" /
           "9. Buy domain\n" /
           "0. Exit\n" /
           "\n" /
           "------------------\n\n" /
           'Select an option: '
    selection = get_selection(text, 0, 10)

    case selection
    when 1
      register
    when 2
      delete_user
    when 3
      add_admin
    when 4
      delete_admin
    when 5
      block_user
    when 6
      unblock_user
    when 7
      edit_user
    when 8
      buy_server
    when 9
      buy_domain
    when 0
      return 0
    end
  end
end

start
